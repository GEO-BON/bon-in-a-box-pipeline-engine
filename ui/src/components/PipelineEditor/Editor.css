#editorLayout {
  flex-direction: column;
  display: flex;
  height: 100%;
}

.dndflow {
  flex: 1;
}

.tooltip {
  position: absolute;
  margin: 5px;
  padding: 5px;
  background-color: #222222bb;
  width: max-content;
  max-width: 65%;
  z-index: 1300; /* Tooltip (gray zone top left) */
  pointer-events: none;
}

.tooltip .reactMarkdown p {
  padding: 0px;
  margin: 0px;
}

.tooltip .reactMarkdown {
  padding: 0px;
  margin: 0px;
}

.noLink a {
  text-decoration: none;
  color: inherit;
  font-weight: normal;
  cursor: default;
}

.userInput {
  padding: 1px 2px 1px 10px;
  border-color: #36eb5a;
}

.constant {
  padding: 0;
  border-color: #0041d0;

  /* Prevent the hand cursor from appearing in non-draggable zones */
  cursor: auto;
}

.constant table {
  margin: 0;
}

.constant table td {
  border: none;
  padding: 3px 0px;
  vertical-align: top;
}

.constant table td.dragHandle {
  padding: 3px 2px;
}

.constant p {
  margin: 0px 10px 0 10px;
}

.dragHandle {
  cursor: grab;
}

.dragHandle:active {
  cursor: grabbing;
}

.react-flow__node-output {
  border-color: #ff0072;
}

.reactflow-wrapper {
  flex-grow: 1;
  height: 95%;
  background-color: #8f94a0;
  border-radius:15px;
  border: 4px solid rgba(255, 255, 255, 0.432);
}

.selectall {
  margin-top: 10px;
}

.react-flow__edge-path,
.react-flow__connection-path {
  stroke: #fcfcfc;
  stroke-width: 5;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #9e2b25;
}

.ioNode {
  border-color: rgb(52, 52, 52);
  color: black;
  border-collapse: unset;
}

.ioNode,
.constant,
.userInput,
.react-flow__node-output {
  color: black;
  background-color: whitesmoke;

  border-width: 2px;
  border-radius: 4px;
  border-style: solid;
}

.ioNode.pipeline {
  border-style: double;
  border-width: 5px;
}

.ioNode:hover,
.constant:hover,
.userInput:hover,
.react-flow__node-output:hover {
  background-color: white;
}

.selected .ioNode,
.selected .constant,
.selected .userInput,
.react-flow__node-output.selected,
.ioList .selected {
  background-color: blanchedalmond;
}

.ioNode td {
  border: none;
  padding: 3px 0px;
  min-width: 0.5em;
}

.ioNode td.name {
  padding: 0.5em;
  max-width: min-content;
}

.ioNode td.name > div {
  min-width: 300px;
}

.ioNode .ioNode-folder, .ioNode .ioNode-script{
  display: block;
  white-space: nowrap;
}
.ioNode .ioNode-folder{
    font-size: 0.6em;
}
.ioNode .ioNode-script{
    font-weight: 700;
    color: var(--biab-green-main)
}

.inputs,
.outputs {
  vertical-align: top;
  font-size: 0.7rem;
}

.react-flow__handle {
  width: 0.5rem;
  height: 0.5rem;
}

.inputs .react-flow__handle,
.outputs .react-flow__handle {
  position: relative;
}

.inputs .react-flow__handle-left,
.outputs .react-flow__handle-right {
  /* Undo default style */
  right: auto;
  left: auto;
  top: 0.1rem; /* Match with text alignment */
  bottom: auto;
  transform: none;
  display: inline-block;
}

.inputs .react-flow__handle-left {
  margin-left: -7px;
  margin-right: 3px;
}

.ioNode.pipeline .inputs .react-flow__handle-left {
  margin-left: -9px;
}

.outputs {
  text-align: right;
}

.outputs .react-flow__handle-right {
  margin-left: 3px;
  margin-right: -7px;
}

.ioNode.pipeline .outputs .react-flow__handle-right {
  margin-right: -9px;
}

.inputs div:hover,
.outputs div:hover {
  text-shadow: 0px 0px 1px black;
}


.ioWarning {
  color: hsl(0, 100%, 27%);
  font-weight: bold;
}

.save__controls {
  position: absolute;
  right: 10px;
  top: 10px;
  z-index: 4; /* Save controls */
  font-size: 12px;
}

.save__controls button {
  margin-left: 5px;
}

.rightPane {
  border: 1px solid black;
  border-radius: 3px 0px 0px 3px;
  background: whitesmoke;
  color: black;

  position: absolute;
  left: max(2em, calc(100% - 400px));
  top: 3em;
  right: 0px;
  bottom: 190px;

  z-index: 1200; /* Right pane opened */
  transition: left 0.5s, right 0.5s;
}

.rightPane.paneCollapsed {
  left: 100%;
  right: max(-400px, calc(2em - 100%));
  z-index: 1100; /* Right pane collapsed */
}

.rightPaneInner {
  height: 100%;
}

.ioList {
  border-radius: 0px 0px 0px 3px;
  min-height: 15rem;
}

.ioList .rightPaneInner {
  overflow-y: auto;
  overflow-x: hidden;
}

.ioList h3 {
  padding-left: 6px;
}

.ioList .label {
  font-weight: bold;
}

.ioList .description {
  font-size: small;
}

.ioList .example-tag {
  padding-left: 5px;
  font-size: small;
}

.ioList .example {
  font-size: small;
}

.ioList .ioListItem td.reorder-drag {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.ioList textarea.label,
.ioList textarea.description,
.ioList textarea.example {
  /* Removing the width of the dragHandle from 100% */
  width: calc(100% - 1.1rem);
  background-color: transparent;
  border: 1px solid transparent;
  resize: none;
  font-family: inherit;
  padding: 2px 5px;
}

.ioList textarea.label:hover,
.ioList textarea.description:hover {
  background: url("../../img/pen.svg");
  background-repeat: no-repeat;
  background-position: right;
  background-size: 1.5em;
  outline: 1px solid #bbb;
}

.ioList textarea.label:focus,
.ioList textarea.description:focus,
.ioList textarea.autoResizeHeight:focus  {
  outline: 1px solid var(--biab-green-trans-main);
  border: 1px solid var(--biab-green-trans-main);
}

.ioList textarea.label:hover:focus,
.ioList textarea.description:hover:focus  {
  background: none;
}

.ioList textarea.autoResizeHeight.example  {
  outline: 1px solid #bbb;
  display: block;
}

.ioList .MuiFormGroup-root {
  display: inline;
}

.ioList .draggable {
  /* https://stackoverflow.com/a/34685980/3519951 */
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="25" style="font-size: 25px;"><text x="-5" y="20">⇳</text></svg>'), auto;
}

.ioList .dragging * {
  /* https://stackoverflow.com/a/34685980/3519951 */
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="25" style="font-size: 25px;"><text x="-5" y="20">⬍</text></svg>'), auto;
}

.ioList .ioListItem {
  background-color: whitesmoke;
  padding-left: 5px;
}

.ioList .ioListItem table {
  width: 100%;
}
.ioList .ioListItem tr,
.ioList .ioListItem td
 {
  border: none;
  padding: 0;
  margin: 0;
}

.ioList .ioListItem td {
  position: relative;
}

.ioList .ioListItem:hover {
  background-color: white;
}

.ioList .ioListItem.dragging.collapsed {
  background-color: lightgreen;
}

.ioListItem .MuiInputBase-input{
  font-size: 0.7em;
  padding: 2px;
}

.ioListItem .MuiInputBase-root{
  padding: 5px;
}

.ioListItem .MuiInputBase-input{
  font-size:0.7em;
  padding: 2px;
}

.collapseButton,
.expandButton {
  height: 2rem;
  z-index: 1000;
  position: absolute;
  top: 5px;
  right: 10px;
  padding: 3px;
  border: 1px solid lightgrey;
  background: whitesmoke;
  border-radius: 5px;
}

.collapseButton:hover,
.expandButton:hover {
  background-color: lightgrey;
  cursor: pointer;
}

.collapseTab {
  text-align: center;
}

.paneOpen .collapseTab {
  writing-mode: horizontal-tb;
}

.topToBottomText {
  writing-mode: vertical-rl;
  text-orientation: mixed;
}

.collapseTab {
  position: absolute;
  width: 15px;
  left: -28px; /*-width - padding - border*/
  top: -1px;
  padding: 6px;

  background: whitesmoke;
  border-style: solid none solid solid;
  border-width: 1px;
  border-color: black whitesmoke black black;
  border-radius: 3px 0px 0px 3px;
  cursor: pointer;
}

.rightPane.metadataPane {
  left: max(2em, calc(100% - 850px));
  min-height: 22rem;
}

.rightPane.metadataPane.paneCollapsed {
  left: 100%;
  right: max(-850px, calc(2em - 100%));
}

.metadataPane .collapseTab {
  top: 13rem;
}

.metadataPane h3 {
  padding-left: 26px;
}

.arrowDownButton {
  /* Remove the button styling */
  border: none;
  background: none;
  font-size: 60px;
  cursor: pointer;
  padding: 0;

  /* Create the down arrow */
  width: 0;
  height: 0;
  border-left: 0.5rem solid transparent;
  border-right: 0.5rem solid transparent;
  border-top: 0.5rem solid rgb(112, 112, 112);

  /*Placement*/
  vertical-align: top;
  margin-left: 5px;
  margin-top: 2px;
  padding-bottom: 0.5rem;
}

ul#popupMenu {
  /* see https://mionskowski.pl/posts/positioning-a-context-menu-using-pure-css/ */
  position: fixed;
  margin: 0;
  left: 0;
  top: 0;
  /* The following line is responsible for all the magic */
  transform: translateX(min(var(--mouse-x), calc(100vw - 100%)))
    translateY(min(var(--mouse-y), calc(100vh - 100%)));

  /* Styling */
  z-index: 2000; /* Right click popup menu */
  color: black;
  background-color: whitesmoke;
  border: 2px solid rgb(52, 52, 52);
}

#popupMenu {
  padding: 0;
  max-height: 70vh;
  overflow-y: scroll;
}

#popupMenu li {
  padding: 3px;
  list-style-type: none;
  font-size: 0.75em;
}

#popupMenu li:hover {
  background-color: #aaa;
  cursor: pointer;
}
