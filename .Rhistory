library(gdalcubes)
library(rstac)
library(knitr)
library(stars)
s_obj <- stac("https://stac.geobon.org/")
collections <- s_obj |> collections() |> get_request()
View(collections)
df<-data.frame(id=character(),title=character(),description=character())
for (c in collections[['collections']]){
df<-rbind(df,data.frame(id=c$id,title=c$title,description=c$description))
}
kable(df)
View(df)
it_obj <- s_obj |>
stac_search(collections = "earthenv_landcover") |>
post_request() |> items_fetch()
it_obj
View(it_obj)
it_obj <- s_obj |>
collections("earthenv_landcover") |> items() |>
get_request() |> items_fetch()
it_obj
it_obj[['features']][[1]]$properties
plot(it_obj)
class(it_obj)
lc1<-read_stars(paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href), proxy = TRUE)
plot(lc1)
it_obj[['features']][[12]]
it_obj[['features']][[12]]$assets$data$href
paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href
paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href)
paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href)
lc1<-read_stars(paste0('/vsicurl/',it_obj[['features']][[11]]$assets$data$href), proxy = TRUE)
plot(lc1)
lc1<-read_stars(paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href), proxy = TRUE)
it_obj[['features']]
it_obj <- s_obj |>
collections("earthenv_landcover") |> items() |>
get_request() |> items_fetch()
it_obj
View(df)
it_obj
it_obj[['features']][[12]]$assets
library(sf)
lc1<-st_read(paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href), proxy = TRUE)
lc1<-st_read(paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href))
collections <- s_obj |> collections() |> get_request()
View(collections)
rstac::get_request(stac_source)
rstac::get_request(s_obj)
s_obj <- stac("https://stac.geobon.org/")
rstac::get_request(s_obj)
s_obj <- stac("https://stac.geobon.org/")
collections_query <- stac_source |>
rstac::collections()
collections_query <- s_obj |>
rstac::collections()
View(collections)
View(collections_query)
collections <- stac_obj |> collections() |> get_request()
collections <- s_obj |> collections() |> get_request()
View(collections_query)
available_collections <- rstac::get_request(collections_query)
s_obj <- stac("https://stac.geobon.org/")
collections_query <- s_obj |>
rstac::collections()
available_collections <- rstac::get_request(collections_query)
rstac::get_request(collections_query)
class(s_obj)
collections_query <- s_obj |>
rstac::collections()
str(s_obj)
get_request(stac_source)
get_request(s_obj)
get_request(s_obj)
s_obj <- stac("https://stac.geobon.org/")
rstac::get_request(s_obj)
collections_query <- s_obj |>
rstac::collections()
available_collections <- rstac::get_request(collections_query)
s_obj <- stac("https://stac.geobon.org/")
rstac::get_request(s_obj)
collections_query <- s_obj |>
rstac::collections()
available_collections <- rstac::get_request(collections_query)
available_collections
# install.packages(c(('gdalcubes', 'rstac', 'knitr')))
library(gdalcubes)
library(rstac)
library(knitr)
library(stars)
stac_obj <- stac("https://stac.geobon.org/")
collections <- stac_obj |> collections() |> get_request()
df<-data.frame(id=character(),title=character(),description=character())
for (c in collections[['collections']]){
df<-rbind(df,data.frame(id=c$id,title=c$title,description=c$description))
}
kable(df)
it_obj <- stac_obj |>
stac_search(collections = "earthenv_landcover") |>
post_request() |> items_fetch()
it_obj
it_obj <- stac_obj |>
collections("earthenv_landcover") |> items() |>
get_request() |> items_fetch()
it_obj
it_obj <- s_obj |>
collections("earthenv_landcover") |> items() |>
get_request() |> items_fetch()
it_obj
it_obj[['features']][[1]]$properties
df<-data.frame(id=character(),datetime=character(), description=character())
for (f in it_obj[['features']]){
df<-rbind(df,data.frame(id=f$id,datetime=f$properties$datetime,description=f$properties$description))
}
kable(df)
lc1<-read_stars(paste0('/vsicurl/',it_obj[['features']][[12]]$assets$data$href), proxy = TRUE)
plot(lc1)
bbox<-st_bbox(c(xmin = -76, xmax = -70, ymax = 54, ymin = 50), crs = st_crs(4326))
lc2 <- lc1 |> st_crop(bbox)
bbox<-st_bbox(c(xmin = -76, xmax = -70, ymax = 54, ymin = 50), crs = st_crs(4326))
lc2 <- lc1 |> st_crop(bbox)
pal <- colorRampPalette(c("black","darkblue","red","yellow","white"))
plot(lc2,breaks=seq(0,100,10),col=pal(10))
df<-data.frame(id=character(),datetime=character(), description=character())
for (f in it_obj[['features']]){
df<-rbind(df,data.frame(id=f$id,datetime=f$properties$datetime,description=f$properties$description))
}
head(kable(df))
df<-data.frame(id=character(),title=character(),description=character())
for (c in collections[['collections']]){
df<-rbind(df,data.frame(id=c$id,title=c$title,description=c$description))
}
head(kable(df))
kable(df[c(1:6),])
kable(head(df))
kable(head(df))
st <- stac_image_collection(it_obj$features, asset_names=c('data'),
property_filter = function(f){f[['class']] %in% c('1','2','3','4')},srs='EPSG:4326')
for (i in 1:length(it_obj$features)){
it_obj$features[[i]]$assets$data$roles='data'
}
st <- stac_image_collection(it_obj$features, asset_names=c('data'),
property_filter = function(f){f[['class']] %in% c('1','2','3','4')},srs='EPSG:4326')
st
st <- stac_image_collection(it_obj$features, asset_names=c('data'),
property_filter = function(f){f[['class']] %in% c('1','2','3','4')},srs='EPSG:4326')
bbox<-st_bbox(c(xmin = -483695, xmax = -84643, ymin = 112704 , ymax = 684311), crs = st_crs(32198))
v <- cube_view(srs = "EPSG:32198", extent = list(t0 = "2000-01-01", t1 = "2000-01-01",
left = bbox$xmin, right =bbox$xmax, top = bbox$ymax, bottom = bbox$ymin),
dx=1000, dy=1000, dt="P1D", aggregation = "sum", resampling = "mean")
st <- stac_image_collection(it_obj$features, asset_names=c('data'),
property_filter = function(f){f[['class']] %in% c('1','2','3','4')},srs='EPSG:4326')
bbox<-st_bbox(c(xmin = -483695, xmax = -84643, ymin = 112704 , ymax = 684311), crs = st_crs(32198))
v <- cube_view(srs = "EPSG:32198", extent = list(t0 = "2000-01-01", t1 = "2000-01-01",
left = bbox$xmin, right =bbox$xmax, top = bbox$ymax, bottom = bbox$ymin),
dx=1000, dy=1000, dt="P1D", aggregation = "sum", resampling = "mean")
lc_cube <- raster_cube(st, v)
---
title: "Working with STAC"
lc_cube <- raster_cube(st, v)
lc_cube |> plot(zlim=c(0,100),col=pal(10))
it_obj <- s_obj |>
collections("accessibility_to_cities") |> items() |>
get_request() |> items_fetch()
v <- cube_view(srs = "EPSG:32198", extent = list(t0 = "2015-01-01", t1 = "2015-01-01",
left = bbox$xmin, right =bbox$xmax, top = bbox$ymax, bottom = bbox$ymin),
dx=1000, dy=1000, dt="P1D", aggregation
= "mean", resampling = "bilinear")
for (i in 1:length(it_obj$features)){
it_obj$features[[i]]$assets$data$roles='data'
}
st <- stac_image_collection(it_obj$features)
lc_cube <- raster_cube(st, v)
lc_cube |> plot(col=heat.colors)
it_obj <- s_obj |>
stac_search(collections = "chelsa-monthly", datetime="2010-06-01T00:00:00Z/2019-08-01T00:00:00Z") |>
get_request() |> items_fetch()
v <- cube_view(srs = "EPSG:32198", extent = list(t0 = "2010-06-01", t1 = "2019-08-31",
left = bbox$xmin, right =bbox$xmax, top = bbox$ymax, bottom = bbox$ymin),
dx=1000, dy=1000, dt="P10Y",
aggregation = "mean",
resampling = "bilinear")
for (i in 1:length(it_obj$features)){
names(it_obj$features[[i]]$assets)='data'
it_obj$features[[i]]$assets$data$roles='data'
}
anames=unlist(lapply(it_obj$features,function(f){f['id']}))
st <- stac_image_collection(it_obj$features, asset_names = 'data',
property_filter = function(f){f[['variable']] == 'tas' & (f[['month']] %in% c(6,7,8)) })
c_cube <- raster_cube(st, v)
c_cube |> plot(col=heat.colors)
c_cube |> write_tif('~/',prefix='chelsa-monthly',creation_options=list('COMPRESS'='DEFLATE'))
lc_cube |> plot(col=viridis)
lc_cube |> plot(col=heat.colors)
lc_cube |> plot(col=heat.colors)
lc_cube |> plot(col=heat.colors)
