name: Publish script server to Github Packages

on:
  push:
    branches:
      - main
      - '*staging'
      - edge
    paths:
      - "script-server/**"
      - ".github/workflows/docker_script-server.yml"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/script-server

jobs:
  script-server:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Read BON in a Box version
        run: echo "BIAB_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Set Docker tag
        id: set-tag
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "TAG_BRANCH=latest" >> $GITHUB_ENV
            echo "TAG_VERSION=${{ env.BIAB_VERSION }}" >> $GITHUB_ENV
          else
            echo "TAG_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
            if [ "${{ github.ref_name }}" == "edge" ]; then
              echo "TAG_VERSION=${{ env.BIAB_VERSION }}-SNAPSHOT" >> $GITHUB_ENV
            fi
          fi

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          tags: |
            type=raw,value=${{ env.TAG_BRANCH }}
            type=semver,pattern={{version}},value=${{ env.TAG_VERSION }}
            type=sha,value=${{ github.sha }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: script-server
          file: script-server/Dockerfile.prod
          build-args: |
            "BIAB_VERSION=${{ env.BIAB_VERSION }}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true